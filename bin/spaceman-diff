#!/bin/sh
#
# spaceman-diff
# ...because you're too busy to leave the command line, dammit.
#
# Enjoy.

set -e

help()
{
  cat <<EOF
  This should normally be called via \`git-diff(1)\`.

  USAGE:
    spaceman-diff fileA shaA modeA fileB shaB modeB
EOF
}

if [ "$1" = "" ] ; then
  help
  exit
fi

sideBySideBuffer=4
screenWidth=$(stty size | cut -d " " -f2)
screenWidthMinusBuffer=$(expr $screenWidth - $sideBySideBuffer)
perDiffWidth=$(expr $screenWidthMinusBuffer / 2)

fileA=$2
fileB=$5

# Header row
if [ -f "$fileA" ] ; then
  set +e
  sizeA=$(expr $(ls -l "$fileA" | awk '{print $5}') / 1024)
  set -e
else
  sizeA=0
fi

if [ -f "$fileB" ] ; then
  set +e
  sizeB=$(expr $(ls -l "$fileB" | awk '{print $5}') / 1024)
  set -e
else
  sizeB=0
fi

headerA="OLD: $1 ($sizeA KB)"
headerB="NEW: $5 ($sizeB KB)"

lengthA=$(echo $headerA | wc -m | xargs)
lengthB=$(echo $headerB | wc -m | xargs)

echo
printf "$headerA"
printf "$(yes " " | head -n$(expr $perDiffWidth - $lengthA + $sideBySideBuffer + 1) | tr -d '\n')"
printf "$headerB"
echo

printf "$(yes "—" | head -n$perDiffWidth | tr -d '\n')"
printf "$(yes " " | head -n$sideBySideBuffer | tr -d '\n')"
printf "$(yes "—" | head -n$perDiffWidth | tr -d '\n')"
echo

if [ -f "$fileA" ] ; then
  outputA=$(convert "$fileA" jpg:- | jp2a --color --width=$perDiffWidth -)
fi

if [ -f "$fileB" ] ; then
  outputB=$(convert "$fileB" jpg:- | jp2a --color --width=$perDiffWidth -)
fi

heightA=$(echo "$outputA" | wc -l | xargs)
heightB=$(echo "$outputB" | wc -l | xargs)
max=$(echo "$heightA\n$heightB" | sort -nr | head -n1)

for i in $(seq 1 $max)
do
  A=$(echo "$outputA" | sed -n ${i}p)
  B=$(echo "$outputB" | sed -n ${i}p)

  if [ "$A" = "" ] ; then
    A=$(yes " " | head -n$perDiffWidth | tr -d '\n')
  fi

  if [ "$B" = "" ] ; then
    B=$(yes " " | head -n$perDiffWidth | tr -d '\n')
  fi

  echo "$A    $B"
done

echo
