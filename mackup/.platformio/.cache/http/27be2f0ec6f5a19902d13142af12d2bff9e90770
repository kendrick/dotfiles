[{"ownername":"aceinna","name":"aceinna_imu","title":"Aceinna IMU","description":"Open-source, embedded development platform for Aceinna IMU hardware. Run custom algorithms and navigation code on Aceinna IMU/INS hardware.","license":"Apache-2.0","homepage":"https://www.aceinna.com","url":"https://www.aceinna.com","docs":null,"repository":"https://github.com/aceinna/platform-aceinna_imu.git","frameworks":[],"packages":["tool-jlink","tool-openocd","toolchain-gccarmnoneeab"],"forDesktop":false,"versions":["1.3.10","1.3.9"]},{"ownername":"platformio","name":"atmelavr","title":"Atmel AVR","description":"Atmel AVR 8-bit MCUs deliver a unique combination of performance, power efficiency and design flexibility. Optimized to speed time to market-and easily adapt to new ones-they are based on the industry's most code-efficient architecture for C and assembly programming","license":"Apache-2.0","homepage":"http://www.atmel.com/products/microcontrollers/avr/default.aspx","url":"http://www.atmel.com/products/microcontrollers/avr/default.aspx","docs":null,"repository":"https://github.com/platformio/platform-atmelavr.git","frameworks":["arduino"],"packages":["framework-arduino-avr","framework-arduino-avr-attiny","framework-arduino-avr-bean","framework-arduino-avr-core13","framework-arduino-avr-digistump","framework-arduino-avr-dwenguino","framework-arduino-avr-majorcore","framework-arduino-avr-megacore","framework-arduino-avr-microcore","framework-arduino-avr-mightycore","framework-arduino-avr-minicore","framework-arduino-avr-nicai","framework-arduino-avr-panstamp","framework-arduino-avr-prusa_rambo","tool-avrdude","tool-micronucleus","tool-simavr","toolchain-atmelavr"],"forDesktop":false,"versions":["5.0.0","4.2.0","4.1.0","4.0.1","3.4.0","3.3.0","2.2.0"]},{"ownername":"platformio","name":"atmelsam","title":"Atmel SAM","description":"Atmel | SMART offers Flash- based ARM products based on the ARM Cortex-M0+, Cortex-M3 and Cortex-M4 architectures, ranging from 8KB to 2MB of Flash including a rich peripheral and feature mix.","license":"Apache-2.0","homepage":"https://www.microchip.com/design-centers/32-bit","url":"https://www.microchip.com/design-centers/32-bit","docs":null,"repository":"https://github.com/platformio/platform-atmelsam.git","frameworks":["arduino","zephyr"],"packages":["framework-arduino-sam","framework-arduino-samd","framework-arduino-samd-adafruit","framework-arduino-samd-moteino","framework-arduino-samd-reprap","framework-arduino-samd-seeed","framework-arduino-samd-sodaq","framework-arduino-samd-sparkfun","framework-arduino-samd-tuino0","framework-cmsis","framework-cmsis-atmel","framework-zephyr","tool-avrdude","tool-bossac","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","tool-openocd","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["8.2.1","8.2.0","8.1.0"]},{"ownername":"platformio","name":"atmelmegaavr","title":"Atmel megaAVR","description":"8-bit MCUs Built for Real-time Control with Core Independent Peripherals combining intelligent hardware peripherals along with the low-power capability of an AVR core, megaAVR microcontrollers (MCUs) broaden the effectiveness of your real-time control systems.","license":"Apache-2.0","homepage":"https://www.microchip.com/design-centers/8-bit/avr-mcus/device-selection/atmega4809","url":"https://www.microchip.com/design-centers/8-bit/avr-mcus/device-selection/atmega4809","docs":null,"repository":"https://github.com/platformio/platform-atmelmegaavr.git","frameworks":["arduino"],"packages":["framework-arduino-megaavr","framework-arduino-megaavr-dxcore","framework-arduino-megaavr-megacorex","framework-arduino-megaavr-megatinycore","tool-avrdude","tool-avrdude-megaavr","toolchain-atmelavr"],"forDesktop":false,"versions":["1.9.0","1.8.0","1.7.0"]},{"ownername":"usmnzain","name":"azadi","title":"Azadi","description":"A software development kit for developing applications on Azadi System on Chip","license":"Apache-2.0","homepage":"https://merledupk.org","url":"https://merledupk.org","docs":null,"repository":"https://github.com/platformio/platform-myplatform.git","frameworks":["azadi-sdk"],"packages":["framework-azadi-sdk","tool-jlink","tool-openocd-riscv","toolchain-riscv"],"forDesktop":false,"versions":["0.0.3"]},{"ownername":"bonfirecpu","name":"Bonfire","title":"Bonfire CPU","description":"Bonfire CPU Softcore","license":"MIT","homepage":"https://bonfirecpu.eu","url":"https://bonfirecpu.eu","docs":null,"repository":"https://github.com/bonfireprocessor/bonfire_pio.git","frameworks":["bonfire-sdk"],"packages":["framework-bonfire-sdk","toolchain-riscv"],"forDesktop":true,"versions":["0.0.2"]},{"ownername":"platformio","name":"chipsalliance","title":"CHIPS Alliance","description":"The CHIPS Alliance develops high-quality, open source hardware designs relevant to silicon devices and FPGAs.","license":"Apache-2.0","homepage":"https://chipsalliance.org","url":"https://chipsalliance.org","docs":null,"repository":"https://github.com/platformio/platform-chipsalliance.git","frameworks":["wd-riscv-sdk","freertos"],"packages":["framework-wd-riscv-sdk","tool-openocd-riscv-chipsalliance","tool-verilator-swervolf","tool-whisper","toolchain-riscv"],"forDesktop":false,"versions":["1.3.0","1.2.0"]},{"ownername":"platformio","name":"espressif32","title":"Espressif 32","description":"ESP32 is a series of low-cost, low-power system on a chip microcontrollers with integrated Wi-Fi and Bluetooth. ESP32 integrates an antenna switch, RF balun, power amplifier, low-noise receive amplifier, filters, and power management modules.","license":"Apache-2.0","homepage":"https://espressif.com/","url":"https://espressif.com/","docs":null,"repository":"https://github.com/platformio/platform-espressif32.git","frameworks":["arduino","espidf"],"packages":["framework-arduinoespressif32","framework-espidf","tool-cmake","tool-dfuutil-arduino","tool-esptoolpy","tool-idf","tool-mconf","tool-mkfatfs","tool-mklittlefs","tool-mkspiffs","tool-ninja","tool-openocd-esp32","tool-riscv32-esp-elf-gdb","tool-xtensa-esp-elf-gdb","toolchain-esp32ulp","toolchain-riscv32-esp","toolchain-xtensa-esp32","toolchain-xtensa-esp32s2","toolchain-xtensa-esp32s3"],"forDesktop":false,"versions":["6.6.0","6.5.0","6.4.0","5.4.0","6.3.2","6.3.1","6.3.0","6.2.0","6.1.0","6.0.1","6.0.0","5.3.0","5.2.0","5.1.1","5.1.0","5.0.0","4.4.0","4.3.0","4.2.0","4.1.0","4.0.0","3.5.0","3.4.0","3.3.2","3.3.1","3.3.0","3.2.1","3.2.0","3.1.1","3.1.0","3.0.0","2.1.0","2.0.0","1.12.4","1.11.2","1.9.0","1.7.0","1.5.0","1.2.0","1.0.2"]},{"ownername":"platformio","name":"espressif8266","title":"Espressif 8266","description":"ESP8266 is a cost-effective and highly integrated Wi-Fi MCU with built-in TCP/IP networking software for IoT applications. ESP8266 integrates an enhanced version of Tensilicaâ€™s L106 Diamond series 32-bit processor and on-chip SRAM.","license":"Apache-2.0","homepage":"https://espressif.com/","url":"https://espressif.com/","docs":null,"repository":"https://github.com/platformio/platform-espressif8266.git","frameworks":["arduino","esp8266-rtos-sdk","esp8266-nonos-sdk"],"packages":["framework-arduinoespressif8266","framework-esp8266-nonos-sdk","framework-esp8266-rtos-sdk","tool-esptool","tool-esptoolpy","tool-mklittlefs","tool-mkspiffs","toolchain-xtensa"],"forDesktop":false,"versions":["4.2.1","4.2.0","4.1.0","4.0.1","3.2.0","3.0.0","2.6.3","2.6.2","2.5.2","2.4.0","2.3.2","2.2.0","2.0.4","1.8.0"]},{"ownername":"platformio","name":"freescalekinetis","title":"Freescale Kinetis","description":"Freescale Kinetis Microcontrollers is family of multiple hardware- and software-compatible ARM Cortex-M0+, Cortex-M4 and Cortex-M7-based MCU series. Kinetis MCUs offer exceptional low-power performance, scalability and feature integration.","license":"Apache-2.0","homepage":"http://www.freescale.com/webapp/sps/site/homepage.jsp?code=KINETIS","url":"http://www.freescale.com/webapp/sps/site/homepage.jsp?code=KINETIS","docs":null,"repository":"https://github.com/platformio/platform-freescalekinetis.git","frameworks":["mbed","zephyr"],"packages":["framework-mbed","framework-zephyr","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","tool-pyocd","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["10.0.0","9.2.0"]},{"ownername":"heltecautomation","name":"heltec-cubecell","title":"Heltec CubeCell","description":"Heltec CubeCell is an easy-to-use LoRa Node series brand based on a highly integrated and ultra low power SoC and the LoRa SX1262 transceiver.","license":"Apache-2.0","homepage":"https://heltec.org/","url":"https://heltec.org/","docs":null,"repository":"https://github.com/HelTecAutomation/platform-heltec-cubecell.git","frameworks":["arduino"],"packages":["framework-arduinocubecell","tool-cubecellelftool","tool-cubecellflash","tool-cubecellflash6601","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["1.1.0","1.0.0"]},{"ownername":"infineon","name":"infineonxmc","title":"Infineon XMC","description":"Infineon has designed the XMC microcontrollers for real-time critical applications with an industry-standard core. The XMC microcontrollers can be integrated with the Arduino platform","license":"Apache-2.0","homepage":"https://www.infineon.com","url":"https://www.infineon.com","docs":null,"repository":"https://github.com/Infineon/platformio-infineonxmc.git","frameworks":["arduino"],"packages":["framework-arduinoxmc","tool-jlink","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["1.2.0"]},{"ownername":"platformio","name":"intel_arc32","title":"Intel ARC32","description":"ARC embedded processors are a family of 32-bit CPUs that are widely used in SoC devices for storage, home, mobile, automotive, and Internet of Things applications.","license":"Apache-2.0","homepage":"http://www.intel.com/content/www/us/en/wearables/wearable-soc.html","url":"http://www.intel.com/content/www/us/en/wearables/wearable-soc.html","docs":null,"repository":"https://github.com/platformio/platform-intel_arc32.git","frameworks":["arduino"],"packages":["framework-arduinointel","tool-arduino101load","toolchain-intelarc32"],"forDesktop":false,"versions":["1.3.0"]},{"ownername":"platformio","name":"intel_mcs51","title":"Intel MCS-51 (8051)","description":"The Intel MCS-51 (commonly termed 8051) is an internally Harvard architecture, complex instruction set computer (CISC) instruction set, single chip microcontroller (uC) series developed by Intel in 1980 for use in embedded systems.","license":"Apache-2.0","homepage":"https://en.wikipedia.org/wiki/Intel_MCS-51","url":"https://en.wikipedia.org/wiki/Intel_MCS-51","docs":null,"repository":"https://github.com/platformio/platform-intel_mcs51.git","frameworks":[],"packages":["tool-stcgal","tool-vnproch55x","toolchain-sdcc"],"forDesktop":false,"versions":["2.2.0","2.1.0"]},{"ownername":"dcvostok","name":"k1921vk","title":"K1921VK","description":"NIIET K1921VK series","license":"MIT","homepage":"https://github.com/DCVostok/pio_platform_k1921vk","url":"https://github.com/DCVostok/pio_platform_k1921vk","docs":null,"repository":"https://github.com/DCVostok/pio_platform_k1921vk.git","frameworks":["k1921vk_sdk","arduino","freertos"],"packages":["framework-cmsis","framework-k1921vk-freertos","framework-k1921vk-sdk","tool-k1921vkx-flasher","tool-openocd-k1921vk","toolchain-gccarmnoneeabi","vostok-1-frmwrk-vn-arduino"],"forDesktop":false,"versions":["1.7.8"]},{"ownername":"sipeed","name":"kendryte210","title":"Kendryte K210","description":"Kendryte K210 is an AI capable RISCV64 dual core SoC.","license":"Apache-2.0","homepage":"https://kendryte.com/","url":"https://kendryte.com/","docs":null,"repository":"https://github.com/sipeed/platform-kendryte210.git","frameworks":["kendryte-standalone-sdk","kendryte-freertos-sdk","arduino"],"packages":["framework-kendryte-freertos-sdk","framework-kendryte-standalone-sdk","framework-maixduino","tool-kflash-kendryte210","tool-openocd-kendryte","toolchain-kendryte210"],"forDesktop":false,"versions":["1.3.0"]},{"ownername":"platformio","name":"lattice_ice40","title":"Lattice iCE40","description":"The iCE40 family of ultra-low power, non-volatile FPGAs has five devices with densities ranging from 384 to 7680 Look-Up Tables (LUTs). In addition to LUT-based,low-cost programmable logic, these devices feature Embedded Block RAM (EBR), Non-volatile Configuration Memory (NVCM) and Phase Locked Loops (PLLs). These features allow the devices to be used in low-cost, high-volume consumer and system applications.","license":"Apache-2.0","homepage":"http://www.latticesemi.com/Products/FPGAandCPLD/iCE40.aspx","url":"http://www.latticesemi.com/Products/FPGAandCPLD/iCE40.aspx","docs":null,"repository":"https://github.com/platformio/platform-lattice_ice40.git","frameworks":[],"packages":["toolchain-icestorm","toolchain-iverilog"],"forDesktop":false,"versions":["1.3.0"]},{"ownername":"kuba2k2","name":"libretiny","title":"LibreTiny","description":"PlatformIO development platform for IoT modules","license":"MIT","homepage":null,"url":null,"docs":null,"repository":"https://github.com/libretiny-eu/libretiny.git","frameworks":["base","arduino"],"packages":["framework-arduino-api","framework-beken-bdk","framework-realtek-amb1","framework-realtek-ambz2","library-flashdb","library-freertos","library-freertos-port","library-lwip","library-printf","library-uf2ota","tool-openocd","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["1.5.1","1.5.0","1.4.1","1.4.0","1.2.1","1.2.0","1.1.0","1.0.2","1.0.1"]},{"ownername":"platformio","name":"linux_arm","title":"Linux ARM","description":"Linux ARM is a Unix-like and mostly POSIX-compliant computer operating system (OS) assembled under the model of free and open-source software development and distribution. Using host OS (Mac OS X, Linux ARM) you can build native application for Linux ARM platform.","license":"Apache-2.0","homepage":"https://registry.platformio.org/platforms/platformio/linux_arm","url":"https://registry.platformio.org/platforms/platformio/linux_arm","docs":null,"repository":"https://github.com/platformio/platform-linux_arm.git","frameworks":["wiringpi"],"packages":["framework-wiringpi","toolchain-gccarmlinuxgnueabi"],"forDesktop":true,"versions":["1.6.0"]},{"ownername":"platformio","name":"linux_i686","title":"Linux i686","description":"Linux i686 (32-bit) is a Unix-like and mostly POSIX-compliant computer operating system (OS) assembled under the model of free and open-source software development and distribution. Using host OS (Mac OS X or Linux 32-bit) you can build native application for Linux i686 platform.","license":"Apache-2.0","homepage":"https://registry.platformio.org/platforms/platformio/linux_i686","url":"https://registry.platformio.org/platforms/platformio/linux_i686","docs":null,"repository":"https://github.com/platformio/platform-linux_i686.git","frameworks":[],"packages":["toolchain-gcclinux32"],"forDesktop":true,"versions":["1.2.0"]},{"ownername":"platformio","name":"linux_x86_64","title":"Linux x86_64","description":"Linux x86_64 (64-bit) is a Unix-like and mostly POSIX-compliant computer operating system (OS) assembled under the model of free and open-source software development and distribution. Using host OS (Mac OS X or Linux 64-bit) you can build native application for Linux x86_64 platform.","license":"Apache-2.0","homepage":"https://registry.platformio.org/platforms/platformio/linux_x86_64","url":"https://registry.platformio.org/platforms/platformio/linux_x86_64","docs":null,"repository":"https://github.com/platformio/platform-linux_x86_64.git","frameworks":[],"packages":["toolchain-gcclinux64"],"forDesktop":true,"versions":["1.2.0"]},{"ownername":"darkautism","name":"lgt8f","title":"Logic Green boards","description":"Board Package for Logic Green","license":"Apache-2.0","homepage":"https://github.com/darkautism/pio-lgt8fx","url":"https://github.com/darkautism/pio-lgt8fx","docs":null,"repository":"https://github.com/darkautism/pio-lgt8fx.git","frameworks":["arduino"],"packages":["framework-lgt8fx","tool-avrdude","toolchain-atmelavr"],"forDesktop":false,"versions":["1.0.2","1.0.1"]},{"ownername":"waybyte","name":"logicrom","title":"Logicrom OpenCPU Development Platform","description":"Logicrom OpenCPU Development Platform for IoT development on 4G LTE (RDA8910, ASR1601, ASR1603), GSM (MT2503, MT6261, RDA8955) & NBIoT (MT2625) Wireless IoT platforms.","license":"MIT","homepage":"https://waybyte.in/","url":"https://waybyte.in/","docs":null,"repository":"https://github.com/waybyte/platform-logicrom.git","frameworks":["logicromsdk","arduino"],"packages":["framework-logicromarduino","framework-logicromsdk","tool-logicromflasher","toolchain-gccarmnoneeabi","toolchain-gccmipselfrda8955"],"forDesktop":false,"versions":["1.0.0"]},{"ownername":"platformio","name":"maxim32","title":"Maxim 32","description":"Maxim's microcontrollers provide low-power, efficient, and secure solutions for challenging embedded applications. Maxim's processors embed cutting-edge technologies to secure data and intellectual property, proven analog circuitry for real-world applications, and battery-conserving low power operation.","license":"Apache-2.0","homepage":"https://www.maximintegrated.com/en/products/digital/microcontrollers.html","url":"https://www.maximintegrated.com/en/products/digital/microcontrollers.html","docs":null,"repository":"https://github.com/platformio/platform-maxim32.git","frameworks":["mbed"],"packages":["framework-mbed","tool-jlink","tool-pyocd","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["5.0.0"]},{"ownername":"platformio","name":"microchippic32","title":"Microchip PIC32","description":"Microchip's 32-bit portfolio with the MIPS microAptiv or M4K core offer high performance microcontrollers, and all the tools needed to develop your embedded projects. PIC32 MCUs gives your application the processing power, memory and peripherals your design needs!","license":"Apache-2.0","homepage":"http://www.microchip.com/design-centers/32-bit","url":"http://www.microchip.com/design-centers/32-bit","docs":null,"repository":"https://github.com/platformio/platform-microchippic32.git","frameworks":["arduino"],"packages":["framework-arduinomicrochippic32","tool-pic32prog","toolchain-microchippic32"],"forDesktop":false,"versions":["1.7.0"]},{"ownername":"platformio","name":"nxplpc","title":"NXP LPC","description":"The NXP LPC is a family of 32-bit microcontroller integrated circuits by NXP Semiconductors. The LPC chips are grouped into related series that are based around the same 32-bit ARM processor core, such as the Cortex-M4F, Cortex-M3, Cortex-M0+, or Cortex-M0. Internally, each microcontroller consists of the processor core, static RAM memory, flash memory, debugging interface, and various peripherals.","license":"Apache-2.0","homepage":"http://www.nxp.com/products/microcontrollers/","url":"http://www.nxp.com/products/microcontrollers/","docs":null,"repository":"https://github.com/platformio/platform-nxplpc.git","frameworks":["mbed","zephyr"],"packages":["framework-mbed","framework-zephyr","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","tool-openocd","tool-pyocd","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["10.0.0","9.2.0"]},{"ownername":"platformio","name":"nxpimxrt","title":"NXP i.MX RT","description":"The i.MX RT series of crossover processors features the Arm Cortex-M core, real-time functionality and MCU usability at a cost-effective price.","license":"Apache-2.0","homepage":"https://www.nxp.com/products/processors-and-microcontrollers/arm-microcontrollers/i.mx-rt-crossover-mcus:IMX-RT-SERIES","url":"https://www.nxp.com/products/processors-and-microcontrollers/arm-microcontrollers/i.mx-rt-crossover-mcus:IMX-RT-SERIES","docs":null,"repository":"https://github.com/platformio/platform-nxpimxrt.git","frameworks":["mbed","zephyr"],"packages":["framework-mbed","framework-zephyr","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","tool-openocd","tool-pyocd","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["6.2.0","6.1.0","6.0.0","5.3.0","5.2.0"]},{"ownername":"platformio","name":"native","title":"Native","description":"Native development platform is intended to be used for desktop OS. This platform uses built-in toolchains (preferable based on GCC), frameworks, libs from particular OS where it will be run.","license":"Apache-2.0","homepage":"https://registry.platformio.org/platforms/platformio/native","url":"https://registry.platformio.org/platforms/platformio/native","docs":null,"repository":"https://github.com/platformio/platform-native.git","frameworks":[],"packages":[],"forDesktop":true,"versions":["1.2.1"]},{"ownername":"platformio","name":"nordicnrf51","title":"Nordic nRF51","description":"The Nordic nRF51 Series is a family of highly flexible, multi-protocol, system-on-chip (SoC) devices for ultra-low power wireless applications. nRF51 Series devices support a range of protocol stacks including Bluetooth Smart (previously called Bluetooth low energy), ANT and proprietary 2.4GHz protocols such as Gazell.","license":"Apache-2.0","homepage":"https://www.nordicsemi.com/eng/Products/nRF51-Series-SoC","url":"https://www.nordicsemi.com/eng/Products/nRF51-Series-SoC","docs":null,"repository":"https://github.com/platformio/platform-nordicnrf51.git","frameworks":["arduino","zephyr"],"packages":["framework-arduinonordicnrf5","framework-zephyr","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","tool-nrfjprog","tool-openocd","tool-sreccat","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["9.0.0"]},{"ownername":"platformio","name":"nordicnrf52","title":"Nordic nRF52","description":"The nRF52 Series are built for speed to carry out increasingly complex tasks in the shortest possible time and return to sleep, conserving precious battery power. They have a Cortex-M4F processor which makes them quite capable Bluetooth Smart SoCs.","license":"Apache-2.0","homepage":"https://www.nordicsemi.com/Products/nRF52-Series-SoC","url":"https://www.nordicsemi.com/Products/nRF52-Series-SoC","docs":null,"repository":"https://github.com/platformio/platform-nordicnrf52.git","frameworks":["arduino","mbed","zephyr"],"packages":["framework-arduino-mbed","framework-arduinoadafruitnrf52","framework-arduinonordicnrf5","framework-cmsis","framework-mbed","framework-zephyr","tool-adafruit-nrfutil","tool-bossac-nordicnrf52","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","tool-nrfjprog","tool-openocd","tool-sreccat","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["10.4.0","10.3.0","10.2.0","10.1.0","10.0.0","9.6.0","9.5.0","9.4.0","9.3.0"]},{"ownername":"nuclei","name":"nuclei","title":"Nuclei","description":"Find professional RISC-V Processor IP in Nuclei, first professional RISC-V IP company in Mainland China, match all your requirements in AIoT Era.","license":"Apache-2.0","homepage":"https://nucleisys.com/","url":"https://nucleisys.com/","docs":null,"repository":"https://github.com/Nuclei-Software/platform-nuclei.git","frameworks":["nuclei-sdk"],"packages":["framework-nuclei-sdk","tool-jlink","tool-openocd-nuclei","toolchain-riscv-gcc-nuclei"],"forDesktop":false,"versions":["1.0.11"]},{"ownername":"platformio","name":"openhw","title":"OpenHW Group","description":"OpenHW Group is a not-for-profit, global organization that provides an infrastructure for hosting high quality open-source HW developments in line with industry best practices. The OpenHW CV32E40P RISC-V core is the first open-source core for high-volume chips verified with the state-of-the-art process required for high-integrity, commercial SoCs.","license":"Apache-2.0","homepage":"https://www.openhwgroup.org/","url":"https://www.openhwgroup.org/","docs":null,"repository":"https://github.com/platformio/platform-openhw.git","frameworks":["pulp-sdk","pulp-runtime"],"packages":["framework-pulp-runtime","framework-pulp-sdk","tool-openocd-riscv-pulp","tool-ovpsim-corev","tool-renode","toolchain-riscv-pulp"],"forDesktop":false,"versions":["0.3.0"]},{"ownername":"platformio","name":"riscv_gap","title":"RISC-V GAP","description":"GreenWaves GAP8 IoT application processor enables the cost-effective development, deployment and autonomous operation of intelligent sensing devices that capture, analyze, classify and act on the fusion of rich data sources such as images, sounds or vibrations.","license":"Apache-2.0","homepage":"https://greenwaves-technologies.com/en/gap8-product/","url":"https://greenwaves-technologies.com/en/gap8-product/","docs":null,"repository":"https://github.com/platformio/platform-riscv_gap.git","frameworks":["mbed","pulp-os"],"packages":["framework-gap_sdk","tool-pulp_tools","toolchain-riscv-pulp"],"forDesktop":false,"versions":["1.1.0"]},{"ownername":"platformio","name":"raspberrypi","title":"Raspberry Pi RP2040","description":"RP2040 is a low-cost, high-performance microcontroller device with a large on-chip memory, symmetric dual-core processor complex, and rich peripheral.","license":"Apache-2.0","homepage":"https://www.raspberrypi.org/documentation/rp2040/getting-started/","url":"https://www.raspberrypi.org/documentation/rp2040/getting-started/","docs":null,"repository":"https://github.com/platformio/platform-raspberrypi.git","frameworks":["arduino"],"packages":["framework-arduino-mbed","tool-jlink","tool-openocd-raspberrypi","tool-rp2040tools","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["1.12.0","1.11.0","1.10.0","1.9.0","1.8.0"]},{"ownername":"platformio","name":"renesas-ra","title":"Renesas RA","description":"Renesas Advanced (RA) 32-bit microcontrollers with the Arm Cortex-M33, -M23 and -M4 processor cores deliver key advantages compared to competitive Arm Cortex-M MCUs by providing stronger embedded security, superior CoreMark performance and ultra-low power operation.","license":"Apache-2.0","homepage":"https://www.renesas.com/us/en/products/microcontrollers-microprocessors/ra-cortex-m-mcus","url":"https://www.renesas.com/us/en/products/microcontrollers-microprocessors/ra-cortex-m-mcus","docs":null,"repository":"https://github.com/platformio/platform-renesas-ra.git","frameworks":["arduino","fsp","cmsis"],"packages":["framework-arduinorenesas-portenta","framework-arduinorenesas-uno","framework-cmsis-renesas","framework-renesas-fsp","tool-bossac","tool-dfuutil-arduino","tool-jlink","tool-openocd","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["1.4.0","1.3.1","1.3.0","1.2.0","1.1.0","1.0.0","0.0.2","0.0.1"]},{"ownername":"platformio","name":"ststm32","title":"ST STM32","description":"The STM32 family of 32-bit Flash MCUs based on the ARM Cortex-M processor is designed to offer new degrees of freedom to MCU users. It offers a 32-bit product range that combines very high performance, real-time capabilities, digital signal processing, and low-power, low-voltage operation, while maintaining full integration and ease of development.","license":"Apache-2.0","homepage":"http://www.st.com/web/en/catalog/mmc/FM141/SC1169?sc=stm32","url":"http://www.st.com/web/en/catalog/mmc/FM141/SC1169?sc=stm32","docs":null,"repository":"https://github.com/platformio/platform-ststm32.git","frameworks":["mbed","cmsis","spl","libopencm3","arduino","stm32cube","zephyr"],"packages":["framework-arduino-mbed","framework-arduinostm32mxchip","framework-arduinoststm32","framework-arduinoststm32-maple","framework-arduinoststm32l0","framework-cmsis","framework-cmsis-stm32f0","framework-cmsis-stm32f1","framework-cmsis-stm32f2","framework-cmsis-stm32f3","framework-cmsis-stm32f4","framework-cmsis-stm32f7","framework-cmsis-stm32g0","framework-cmsis-stm32g4","framework-cmsis-stm32h7","framework-cmsis-stm32l0","framework-cmsis-stm32l1","framework-cmsis-stm32l4","framework-cmsis-stm32l5","framework-libopencm3","framework-mbed","framework-spl","framework-stm32cubef0","framework-stm32cubef1","framework-stm32cubef2","framework-stm32cubef3","framework-stm32cubef4","framework-stm32cubef7","framework-stm32cubeg0","framework-stm32cubeg4","framework-stm32cubeh7","framework-stm32cubel0","framework-stm32cubel1","framework-stm32cubel4","framework-stm32cubel5","framework-zephyr","tool-cmake","tool-dfuutil","tool-dfuutil-arduino","tool-dtc","tool-gperf","tool-jlink","tool-ldscripts-ststm32","tool-ninja","tool-openocd","tool-stm32duino","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["17.3.0","17.2.0","17.1.0","17.0.0","16.1.0","16.0.0","15.6.0","15.5.1","15.4.1","15.1.0","14.2.0","14.1.0","13.0.0","12.1.1","12.0.0","11.0.0","10.0.1","9.0.0","8.1.0","8.0.0","6.1.1"]},{"ownername":"platformio","name":"ststm8","title":"ST STM8","description":"The STM8 is an 8-bit microcontroller family by STMicroelectronics an extended variant of the ST7 microcontroller architecture. STM8 microcontrollers are particularly low cost for a full-featured 8-bit microcontroller.","license":"Apache-2.0","homepage":"https://www.st.com/en/microcontrollers/stm8-8-bit-mcus.html","url":"https://www.st.com/en/microcontrollers/stm8-8-bit-mcus.html","docs":null,"repository":"https://github.com/platformio/platform-ststm8.git","frameworks":["arduino","spl"],"packages":["framework-arduinoststm8","framework-ststm8spl","tool-openocd","tool-stm8binutils","tool-stm8flash","tool-stm8gal","toolchain-sdcc"],"forDesktop":false,"versions":["2.1.0"]},{"ownername":"platformio","name":"shakti","title":"Shakti","description":"Shakti is an open-source initiative by the RISE group at IIT-Madras, which is not only building open source, production grade processors, but also associated components like interconnect fabrics, verification tools, storage controllers, peripheral IPs and SOC tools.","license":"Apache-2.0","homepage":"https://shakti.org.in/","url":"https://shakti.org.in/","docs":null,"repository":"https://github.com/platformio/platform-shakti.git","frameworks":["shakti-sdk"],"packages":["framework-shakti-sdk","tool-jlink","tool-openocd-riscv","tool-qemu-riscv","toolchain-riscv"],"forDesktop":false,"versions":["1.2.0"]},{"ownername":"platformio","name":"sifive","title":"SiFive","description":"SiFive brings the power of open source and software automation to the semiconductor industry, making it possible to develop new hardware faster and more affordably than ever before. ","license":"Apache-2.0","homepage":"https://sifive.com","url":"https://sifive.com","docs":null,"repository":"https://github.com/platformio/platform-sifive.git","frameworks":["freedom-e-sdk","freertos","zephyr"],"packages":["framework-freedom-e-sdk","framework-zephyr","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","tool-openocd-riscv","tool-qemu-riscv","tool-renode","toolchain-riscv"],"forDesktop":false,"versions":["5.2.0"]},{"ownername":"platformio","name":"siliconlabsefm32","title":"Silicon Labs EFM32","description":"Silicon Labs EFM32 Gecko 32-bit microcontroller (MCU) family includes devices that offer flash memory configurations up to 256 kB, 32 kB of RAM and CPU speeds up to 48 MHz. Based on the powerful ARM Cortex-M core, the Gecko family features innovative low energy techniques, short wake-up time from energy saving modes and a wide selection of peripherals, making it ideal for battery operated applications and other systems requiring high performance and low-energy consumption.","license":"Apache-2.0","homepage":"http://www.silabs.com/products/mcu/32-bit/efm32-gecko/Pages/efm32-gecko.aspx","url":"http://www.silabs.com/products/mcu/32-bit/efm32-gecko/Pages/efm32-gecko.aspx","docs":null,"repository":"https://github.com/platformio/platform-siliconlabsefm32.git","frameworks":["mbed","zephyr"],"packages":["framework-mbed","framework-zephyr","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["10.0.0"]},{"ownername":"platformio","name":"timsp430","title":"TI MSP430","description":"MSP430 microcontrollers (MCUs) from Texas Instruments (TI) are 16-bit, RISC-based, mixed-signal processors designed for ultra-low power. These MCUs offer the lowest power consumption and the perfect mix of integrated peripherals for thousands of applications.","license":"Apache-2.0","homepage":"http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/msp/overview.page","url":"http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/msp/overview.page","docs":null,"repository":"https://github.com/platformio/platform-timsp430.git","frameworks":["arduino","energia"],"packages":["framework-energiamsp430","tool-dslite","tool-mspdebug","toolchain-timsp430"],"forDesktop":false,"versions":["2.4.0"]},{"ownername":"zceemja","name":"timsp432","title":"TI MSP432","description":"The MSP432 is a mixed-signal microcontroller family from Texas Instruments. It is based on a 32-bit ARM Cortex-M4F CPU, and extends their 16-bit MSP430 line, with a larger address space for code and data, and faster integer and floating point calculation than the MSP430. Like the MSP430, it has a number of built-in peripheral devices, and is designed for low power requirements.","license":"Apache-2.0","homepage":null,"url":null,"docs":null,"repository":"https://github.com/zceemja/platform-timsp432.git","frameworks":["arduino","energia","tirtos","cmsis"],"packages":["framework-energiamsp432r","tool-dslite","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["0.1.1"]},{"ownername":"platformio","name":"titiva","title":"TI TIVA","description":"Texas Instruments TM4C12x MCUs offer the industrys most popular ARM Cortex-M4 core with scalable memory and package options, unparalleled connectivity peripherals, advanced application functions, industry-leading analog integration, and extensive software solutions.","license":"Apache-2.0","homepage":"http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/c2000_performance/control_automation/tm4c12x/overview.page","url":"http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/c2000_performance/control_automation/tm4c12x/overview.page","docs":null,"repository":"https://github.com/platformio/platform-titiva.git","frameworks":["arduino","energia","libopencm3"],"packages":["framework-energiativa","framework-libopencm3","tool-openocd","toolchain-gccarmnoneeabi"],"forDesktop":false,"versions":["3.1.0"]},{"ownername":"platformio","name":"teensy","title":"Teensy","description":"Teensy is a complete USB-based microcontroller development system, in a very small footprint, capable of implementing many types of projects. All programming is done via the USB port. No special programmer is needed, only a standard USB cable and a PC or Macintosh with a USB port.","license":"Apache-2.0","homepage":"https://www.pjrc.com/teensy","url":"https://www.pjrc.com/teensy","docs":null,"repository":"https://github.com/platformio/platform-teensy.git","frameworks":["arduino","zephyr"],"packages":["framework-arduinoteensy","framework-zephyr","tool-cmake","tool-dtc","tool-gperf","tool-jlink","tool-ninja","tool-teensy","toolchain-atmelavr","toolchain-gccarmnoneeabi","toolchain-gccarmnoneeabi-teensy"],"forDesktop":false,"versions":["5.0.0","4.18.0","4.17.0","4.12.0"]},{"ownername":"streamlogic","name":"upduino_hls","title":"Upduino HLS","description":"Upduino HLS","license":"CC-BY-NC-ND-2.5","homepage":null,"url":null,"docs":null,"repository":"https://github.com/sathibault/upduino-hls.git","frameworks":[],"packages":["toolchain-fpgaoss","toolchain-gccmingw32","toolchain-logicc"],"forDesktop":true,"versions":["0.3.0"]},{"ownername":"platformio","name":"windows_x86","title":"Windows x86","description":"Windows x86 (32-bit) is a metafamily of graphical operating systems developed and marketed by Microsoft. Using host OS (Windows, Linux 32/64 or Mac OS X) you can build native application for Windows x86 platform.","license":"Apache-2.0","homepage":"https://registry.platformio.org/platforms/platformio/windows_x86","url":"https://registry.platformio.org/platforms/platformio/windows_x86","docs":null,"repository":"https://github.com/platformio/platform-windows_x86.git","frameworks":[],"packages":["toolchain-gccmingw32"],"forDesktop":true,"versions":["1.2.0"]}]