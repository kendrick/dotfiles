[{"name":"arduino","title":"Arduino","description":"The arduino framework for NIIET microcontrollers","url":"http://arduino.cc"},{"name":"cmsis","title":"CMSIS","description":"The ARM Cortex Microcontroller Software Interface Standard (CMSIS) is a vendor-independent hardware abstraction layer for the Cortex-M processor series and specifies debugger interfaces. The CMSIS enables consistent and simple software interfaces to the processor for interface peripherals, real-time operating systems, and middleware. It simplifies software re-use, reducing the learning curve for new microcontroller developers and cutting the time-to-market for devices","url":"https://developer.arm.com/tools-and-software/embedded/cmsis"},{"name":"esp8266-nonos-sdk","title":"ESP8266 Non-OS SDK","description":"The non-OS SDK provides a set of application programming interfaces (APIs) for core ESP8266 functionalities such as data reception/transmission over Wi-Fi, TCP/IP stack functions, hardware interface functions and basic system management functions","url":"https://github.com/espressif/ESP8266_NONOS_SDK"},{"name":"esp8266-rtos-sdk","title":"ESP8266 RTOS SDK","description":"ESP8266 SDK based on FreeRTOS, a truly free professional grade RTOS for microcontrollers","url":"https://github.com/espressif/ESP8266_RTOS_SDK"},{"name":"freertos","title":"FreeRTOS","description":"FreeRTOS is a real-time operating system kernel for embedded devices that has been ported to 40 microcontroller platforms","url":"https://www.freertos.org"},{"name":"freedom-e-sdk","title":"Freedom E SDK","description":"Open Source Software for Developing on the SiFive Freedom E Platform","url":"https://github.com/sifive/freedom-e-sdk"},{"name":"kendryte-freertos-sdk","title":"Kendryte FreeRTOS SDK","description":"Kendryte SDK with FreeRTOS support","url":"https://github.com/kendryte/kendryte-freertos-sdk"},{"name":"kendryte-standalone-sdk","title":"Kendryte Standalone SDK","description":"Kendryte Standalone SDK without OS support","url":"https://github.com/kendryte/kendryte-standalone-sdk"},{"name":"logicromsdk","title":"Logicrom OpenCPU SDK","description":"Logicrom Software Development Kit is an OpenCPU framework/alternate SDK for Wireless IoT development on 4G LTE (RDA8910, ASR1601, ASR1603), GSM (MT2503, MT6261, RDA8955) and NBIoT (MT2625) chipsets/modules.","url":"https://github.com/waybyte/logicromsdk"},{"name":"mbed","title":"Mbed","description":"Arm Mbed OS is an open source embedded operating system designed specifically for the 'things' in the Internet of Things. It includes all the features you need to develop a connected product based on an Arm Cortex-M microcontroller, including security, connectivity, an RTOS and drivers for sensors and I/O devices","url":"https://os.mbed.com/"},{"name":"k1921vk_sdk","title":"NIIET k1921vk SDK","description":"The K1921VKx SDK is a set of software development tools for NIIET microcontrollers","url":"https://github.com/DCVostok/framework-k1921vk-sdk"},{"name":"nuclei-sdk","title":"Nuclei SDK","description":"Open Source Software Development Kit for the Nuclei N/NX processors","url":"https://github.com/Nuclei-Software/nuclei-sdk"},{"name":"pulp-os","title":"PULP OS","description":"PULP is a silicon-proven Parallel Ultra Low Power platform targeting high energy efficiencies. The platform is organized in clusters of RISC-V cores that share a tightly-coupled data memory","url":"https://www.pulp-platform.org"},{"name":"pulp-runtime","title":"PULP Runtime Environment","description":"Runtime Environment for Parallel Ultra Low Power platform targeting high energy efficiencies","url":"https://github.com/pulp-platform/pulp-runtime"},{"name":"pulp-sdk","title":"PULP SDK","description":"Software Development Kit for Parallel Ultra Low Power platform targeting high energy efficiencies","url":"https://github.com/pulp-platform/pulp-sdk"},{"name":"stm32cube","title":"STM32Cube","description":"STM32Cube embedded software libraries, including: The HAL hardware abstraction layer, enabling portability between different STM32 devices via standardized API calls; The Low-Layer (LL) APIs, a light-weight, optimized, expert oriented set of APIs designed for both performance and runtime efficiency","url":"https://www.st.com/en/ecosystems/stm32cube.html"},{"name":"shakti-sdk","title":"Shakti SDK","description":"A software development kit for developing applications on Shakti class of processors","url":"https://gitlab.com/shaktiproject/software/shakti-sdk"},{"name":"spl","title":"Standard Peripheral Library","description":"The ST Standard Peripheral Library provides a set of functions for handling the peripherals on the STM32 family of microcontrollers.","url":"https://www.st.com/en/embedded-software/stsw-stm8069.html"},{"name":"tirtos","title":"TI-RTOS","description":"Stripped Energia framework without compiled core","url":null},{"name":"wd-riscv-sdk","title":"WD-Firmware","description":"The WD Firmware package contains firmware applications and Processor Support Package (PSP) for various cores, alongside demos which support all features","url":"https://github.com/westerndigitalcorporation/riscv-fw-infrastructure"},{"name":"wiringpi","title":"WiringPi","description":"WiringPi is a GPIO access library written in C for the BCM2835 used in the Raspberry Pi. It's designed to be familiar to people who have used the Arduino 'wiring' system","url":"http://wiringpi.com"},{"name":"zephyr","title":"Zephyr RTOS","description":"The Zephyr Project is a scalable real-time operating system (RTOS) supporting multiple hardware architectures, optimized for resource constrained devices, and built with safety and security in mind","url":"https://www.zephyrproject.org"},{"name":"libopencm3","title":"libopencm3","description":"The libOpenCM3 framework aims to create a free and open-source firmware library for various ARM Cortex-M0(+)/M3/M4 microcontrollers, including ST STM32, Ti Tiva and Stellaris, NXP LPC, Atmel SAM3, Energy Micro EFM32 and others","url":"http://www.libopencm3.org"}]